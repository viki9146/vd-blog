<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>vd&#x27;sblog</title>
    <link href="https://vdsblog.live/feed.xml" rel="self" />
    <link href="https://vdsblog.live" />
    <updated>2022-09-30T10:00:18+05:30</updated>
    <author>
        <name>Vivek Deshmukh</name>
    </author>
    <id>https://vdsblog.live</id>

    <entry>
        <title>Detect Shapes In Image</title>
        <author>
            <name>Vivek Deshmukh</name>
        </author>
        <link href="https://vdsblog.live/detect-shapes-in-image/"/>
        <id>https://vdsblog.live/detect-shapes-in-image/</id>

        <updated>2022-09-30T09:58:36+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://vdsblog.live/media/posts/2/opencvlogo.png" alt="" />
                    We can detect different shapes given in any image with different color by using some of the image processing techniques using python language&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://vdsblog.live/media/posts/2/opencvlogo.png" alt="" />
                <p>We can detect different shapes given in any image with different color by using some of the image processing techniques using python language and opencv library built in python language</p>
<h4>Open CV</h4>
<p>OpenCV is the huge open-source library for the computer vision, machine learning, and image processing and now it plays a major role in real-time operation which is very important in today’s systems. By using it, one can process images and videos to identify objects, faces, or even handwriting of a human. </p>
<h6>Given Image :-</h6>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2//maze_0.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2//responsive/maze_0-xs.png 300w ,https://vdsblog.live/media/posts/2//responsive/maze_0-sm.png 480w ,https://vdsblog.live/media/posts/2//responsive/maze_0-md.png 768w ,https://vdsblog.live/media/posts/2//responsive/maze_0-lg.png 1024w ,https://vdsblog.live/media/posts/2//responsive/maze_0-xl.png 1360w ,https://vdsblog.live/media/posts/2//responsive/maze_0-2xl.png 1600w"  alt="" width="525" height="525"></figure>
<h5>Description Of Image</h5>
<p>Here Provided image is seen to be an grid of (7 x 7) nodes connecting to each other </p>
<ul>
<li>Here We can see first 6 boxes contains different shapes </li>
<li>shapes are of three types : "Square" , "Triangle" , "Circle"</li>
<li>Shapes are of  4 Colors</li>
</ul>
<h4>Detecting Shapes:-</h4>
<h5>1. Importing Libraries</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2//opencv.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2//responsive/opencv-xs.png 300w ,https://vdsblog.live/media/posts/2//responsive/opencv-sm.png 480w ,https://vdsblog.live/media/posts/2//responsive/opencv-md.png 768w ,https://vdsblog.live/media/posts/2//responsive/opencv-lg.png 1024w ,https://vdsblog.live/media/posts/2//responsive/opencv-xl.png 1360w ,https://vdsblog.live/media/posts/2//responsive/opencv-2xl.png 1600w"  alt="" width="1105" height="37"></figure>
<p>Here we Have imported cv2 library </p>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2//numpy.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2//responsive/numpy-xs.png 300w ,https://vdsblog.live/media/posts/2//responsive/numpy-sm.png 480w ,https://vdsblog.live/media/posts/2//responsive/numpy-md.png 768w ,https://vdsblog.live/media/posts/2//responsive/numpy-lg.png 1024w ,https://vdsblog.live/media/posts/2//responsive/numpy-xl.png 1360w ,https://vdsblog.live/media/posts/2//responsive/numpy-2xl.png 1600w"  alt="" width="1111" height="45"></figure> <strong>Numpy </strong>is a general-purpose array-processing package. It provides a high-performance multidimensional array object, and tools for working with these arrays</p>
<h5>2. Reading An image </h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2//imread.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2//responsive/imread-xs.png 300w ,https://vdsblog.live/media/posts/2//responsive/imread-sm.png 480w ,https://vdsblog.live/media/posts/2//responsive/imread-md.png 768w ,https://vdsblog.live/media/posts/2//responsive/imread-lg.png 1024w ,https://vdsblog.live/media/posts/2//responsive/imread-xl.png 1360w ,https://vdsblog.live/media/posts/2//responsive/imread-2xl.png 1600w"  alt="" width="1106" height="41"></figure>
<p><code>cv2.imread()</code> method loads an image from the specified file. If the image cannot be read (because of missing file, improper permissions, unsupported or invalid format) then this method returns an empty matrix.</p>
<p><strong>Syntax:   </strong> cv2.imread(path, flag)</p>
<h5>3. Cropping an Image</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2//cropimg.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2//responsive/cropimg-xs.png 300w ,https://vdsblog.live/media/posts/2//responsive/cropimg-sm.png 480w ,https://vdsblog.live/media/posts/2//responsive/cropimg-md.png 768w ,https://vdsblog.live/media/posts/2//responsive/cropimg-lg.png 1024w ,https://vdsblog.live/media/posts/2//responsive/cropimg-xl.png 1360w ,https://vdsblog.live/media/posts/2//responsive/cropimg-2xl.png 1600w"  alt="" width="1102" height="125"></figure>
<p>we can apply array slicing to produce our final result.</p>
<p><strong>Syntax :</strong></p>
<p>             image[rows,columns]</p>
<h5>4. Converting image To HSV colorspace</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/cvtcolor.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/cvtcolor-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/cvtcolor-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/cvtcolor-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/cvtcolor-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/cvtcolor-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/cvtcolor-2xl.png 1600w"  alt="" width="1105" height="39"></figure>
<p><code>cv2.cvtColor()</code> method is used to convert an image from one color space to another. There are more than 150 color-space conversion methods available in OpenCV.</p>
<p><strong>Syntax:</strong> cv2.cvtColor(src, code[, dst[, dstCn]])</p>
<p><strong>Parameters:</strong></p>
<ul>
<li>src: It is the image whose color space is to be changed.</li>
<li>code: It is the color space conversion code.</li>
<li>dst: It is the output image of the same size and depth as src image. It is an optional parameter</li>
<li>.dstCn: It is the number of channels in the destination image. If the parameter is 0 then the number of the channels is derived automatically from src and code. It is an optional parameter.</li>
</ul>
<p><strong>Return Value:</strong> It returns an image.</p>
<h5>5. Splittinng the channel</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/split.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/split-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/split-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/split-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/split-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/split-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/split-2xl.png 1600w"  alt="" width="1109" height="42"></figure>
<p>cv2.split() is used to split coloured/multi-channel image into separate single-channel images.</p>
<p><strong>Syntax: </strong>cv2.split(m[, mv])</p>
<p><strong>Parameters:</strong></p>
<ul>
<li>m:<strong> </strong>Input multi-channel array</li>
<li>mv:<strong> </strong>Output vector of arrays</li>
</ul>
<h5>6. Thresholding techniques</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/threshold.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/threshold-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/threshold-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/threshold-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/threshold-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/threshold-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/threshold-2xl.png 1600w"  alt="" width="1108" height="41"></figure>
<p>Thresholding is a technique in OpenCV, which is the assignment of pixel values in relation to the threshold value provided. In thresholding, each pixel value is compared with the threshold value. If the pixel value is smaller than the threshold, it is set to 0, otherwise, it is set to a maximum value (generally 255).</p>
<p><strong>Syntax:</strong> cv2.threshold(source, thresholdValue, maxVal, thresholdingTechnique) </p>
<p><strong>Parameters:</strong></p>
<ul>
<li><strong> </strong>source: Input Image array (must be in Grayscale).</li>
<li> thresholdValue: Value of Threshold below and above which pixel values will change accordingly.</li>
<li> maxVal: Maximum value that can be assigned to a pixel.</li>
<li> thresholdingTechnique: The type of thresholding to be applied. </li>
</ul>
<h5>7. Find Contours method</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/findcontours.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/findcontours-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/findcontours-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/findcontours-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/findcontours-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/findcontours-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/findcontours-2xl.png 1600w"  alt="" width="1106" height="43"></figure>
<p>Contours can be explained simply as a curve joining all the continuous points (along the boundary), having same color or intensity.</p>
<p><strong>Syntax: </strong>cv2.findContours()</p>
<p><strong>Parameters:</strong></p>
<ul>
<li><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">source: image array</span></li>
<li><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);"> </span>contour retrival mode</li>
<li><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">contour approximation method</span></li>
</ul>
<h5>8. DrawContours</h5>
<figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/drawcontors.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/drawcontors-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/drawcontors-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/drawcontors-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/drawcontors-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/drawcontors-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/drawcontors-2xl.png 1600w"  alt="" width="1107" height="39"></figure>
<p>To draw the contours, cv.drawContours function is used. It can also be used to draw any shape provided you have its boundary points. Its first argument is source image, second argument is the contours which should be passed as a Python list, third argument is index of contours (useful when drawing individual contour</p>
<p><strong>Syntax: </strong></p>
<div class="fragment">
<div class="line">cv.drawContours(img, contours, -1, (0,255,0), 3)</div>
<div> </div>
<h5>9. Display Image</h5>
<div> </div>
<div><figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/imshow.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/imshow-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/imshow-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/imshow-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/imshow-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/imshow-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/imshow-2xl.png 1600w"  alt="" width="1110" height="61"></figure></div>
<div>cv2.imshow() method is used to display an image in a window. The window automatically fits to the image size.</div>
<div><strong>Syntax:</strong> cv2.imshow(window_name, image)</div>
<div><strong>Parameters:</strong> </div>
<ul>
<li>window_name<strong>:</strong> A string representing the name of the window in which image to be displayed.</li>
<li> image<strong>:</strong> It is the image that is to be displayed.</li>
<li>Return<strong> </strong>Value<strong>:</strong> It doesn’t returns anything. </li>
</ul>
<div> </div>
<h5>Final Complete Code:-</h5>
<div><figure class="post__image"><img loading="lazy"  src="https://vdsblog.live/media/posts/2/finalcode.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://vdsblog.live/media/posts/2/responsive/finalcode-xs.png 300w ,https://vdsblog.live/media/posts/2/responsive/finalcode-sm.png 480w ,https://vdsblog.live/media/posts/2/responsive/finalcode-md.png 768w ,https://vdsblog.live/media/posts/2/responsive/finalcode-lg.png 1024w ,https://vdsblog.live/media/posts/2/responsive/finalcode-xl.png 1360w ,https://vdsblog.live/media/posts/2/responsive/finalcode-2xl.png 1600w"  alt="" width="1212" height="572"></figure></div>
<div> </div>
<div>References:-</div>
<div>1. <a href="https://docs.opencv.org/4.x/d4/d73/tutorial_py_contours_begin.html" target="_blank" rel="noopener noreferrer">Findcontour Documentation</a></div>
<div>2. <a href="https://www.geeksforgeeks.org/how-to-detect-shapes-in-images-in-python-using-opencv/" target="_blank" rel="noopener noreferrer">GeeksForGeeks Reference</a><br> </div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>JYTHON</title>
        <author>
            <name>Vivek Deshmukh</name>
        </author>
        <link href="https://vdsblog.live/jython/"/>
        <id>https://vdsblog.live/jython/</id>

        <updated>2022-09-30T10:00:18+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://vdsblog.live/media/posts/1/Jython.jpg" alt="" />
                    What Is Jython ? The Jython project provides implementations of Python in Java, providing to Python the benefits of running on the JVM&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://vdsblog.live/media/posts/1/Jython.jpg" alt="" />
                
    <h2 id="what-is-jython-">
      What Is Jython ?
    </h2>

  <p>
    The Jython project provides implementations of Python in Java, providing to Python the benefits of running on the JVM and access to classes written in Java. The current release (a Jython 2.7.x) only supports Python 2 (sorry). There is work towards a Python 3 in the project’s GitHub repository.<br><br>Jython implementations are freely available for both commercial and non-commercial use. They are distributed with source code under the PSF License v2.<br><br>Jython is complementary to Java and is especially suited for the following tasks:<br><br>    Embedded scripting - Java programmers can add the Jython libraries to their system to allow end users to write simple or complicated scripts that add functionality to the application.<br>    Interactive experimentation - Jython provides an interactive interpreter that can be used to interact with Java packages or with running Java applications. This allows programmers to experiment and debug any Java system using Jython.<br>    Rapid application development - Python programs are typically 2-10x shorter than the equivalent Java program. This translates directly to increased programmer productivity. The seamless interaction between Python and Java allows developers to freely mix the two languages both during development and in shipping products.
  </p>

    <h3 id="getting-started">
      Getting Started
    </h3>

  <p>
    Ready to get started? Head over to <a href="https://www.jython.org/download" target="_blank">Downloads</a>.<br><br>Or you could read a quick overview of <a href="https://www.jython.org/jyspecific" target="_blank">features specific to Jython.</a><br><br>A more detailed introduction and reference can be found in the <a href="https://jython.readthedocs.io/en/latest/" target="_blank">Jython Book.</a>
  </p>

    <h2 id="who-uses-jython">
      Who uses Jython?
    </h2>

  <p>
    Jython is embedded in lots of projects. See some from <a href="https://mvnrepository.com/artifact/org.python/jython-standalone/usages" target="_blank">MVNRepository</a><br><br>    IBM Websphere - Use Jython to provide administrative scripting capabilities.<br>    Apache PIG - Use Jython to support user defined functions.<br>    ImageJ - Use Jython to provide scripted image processing.<br>    GDA - Use Jython to script scientific experiments.<br>    Robot Framework - A generic test automation framework for acceptance testing and acceptance test-driven development (ATDD) which runs on Jython.<br>    TigerJython - An educational programming environment that is based on Jython.<br>    JEM/JythonMusic - An environment for music making and creative programming using Jython.<br>
  </p>
            ]]>
        </content>
    </entry>
</feed>
